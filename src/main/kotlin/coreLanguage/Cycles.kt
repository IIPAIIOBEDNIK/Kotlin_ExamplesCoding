package coreLanguage
// Циклы
//Операторы цикла применяются с тем, чтобы набор операторов в блоке кода, помещенном в цикл, несколько раз при
// исполнении повторялся. Язык Kotlin предлагает следующие циклические конструкции - циклы for, while и do...while


// Цикл for
//Цикл for в Kotlin выполняет итерацию (перебор) любых предоставленных ему объектов. Это похоже на выполнение цикла
//for...in в языке Ruby. Цикл for имеет следующий синтаксис:
// for (объекты коллекции) { ... }
//Блок в цикле for не нужен, если в цикле задействован только один оператор. Коллекция - это тип структуры, подлежащий
//перебору.
/*
fun printCycles (args: Array<String>) {
     val numSet = arrayOf(1, 563,23)

     for (number in numSet) {
            println(number)
     }
}
*/
//Каждое значение в массиве numSet перебирается в цикле и присваивается переменной number. После этого значение
//переменной number выводится в стандартное средство вывода системы.

//Каждый элемент массива имеет индекс - позицию элемента в массиве. Множество индексов массива в языке Kotlin
//начинается с нуля.
//Если вместо вывода на печать собственно числовых значений перебираемых в цикле чисел нужно вывести на печать индексы
//этих чисел, сделать это можно следующим образом:
/*
fun printIndex (args: Array<String>) {
    val numSet = arrayOf(1, 563,23)
    for (index in numSet.indices) {
        println(index)
    }
}
*/

// Можно также указать и тип переменной итератора:
/*
fun printIndex (args: Array<String>) {
    val numSet = arrayOf(1, 563,23)
    for (number: Int in numSet) {
        println(number)
    }
}
*/


// Цикл while






